# Default 프로젝트의 변경사항에 대한 업데이트 이벤트를 수신했을 때 실행되는 워크플로우
# 이벤트를 수신하게 되면, Default 프로젝트의 변경사항을 현재 이 워크플로우가 실행되는 프로젝트에 병합한다.
name: Update from Default Project

on:
  repository_dispatch:
    types: [default-update]

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout self-app project
        uses: actions/checkout@v4
        with:
          path: self-app

      - name: Checkout Default project
        uses: actions/checkout@v4
        with:
          repository: Mojise/github-actions-default-fake
          token: ${{ secrets.ORG_GITHUB_PAT }}
          ref: master
          path: default

      - name: Test
        run: |
          ls -al
          ls -al self-app
          ls -al default
          pwd
          echo ${{ github.repository }}

      - name: Pull latest changes from Default project
        run: |
          cd self-app
          git remote add default "/home/runner/work/github-actions-new-app-2/github-actions-new-app-2/default"
#          git pull default master



#      - name: Sync Changes from A Repository
#        run: |
#          git checkout master
#          git merge --no-commit --no-ff FETCH_HEAD
#          git commit -m "Sync changes from A repository"
#          git push origin master

#          # A 저장소에서 B 저장소로 변경 사항을 병합
#          git config user.email "actions@github.com"
#          git config user.name "GitHub Actions"
#          git checkout main  # B 저장소의 메인 브랜치로 변경
#          git merge --no-commit --no-ff FETCH_HEAD  # A 저장소의 변경사항을 병합
#          git commit -m "Sync changes from A repository"
#          git push origin main  # B 저장소에 변경 사항 푸시
#
#      - name: Checkout Default project
#        uses: actions/checkout@v4
#        with:
#          repository: Mojise/github-actions-default-fake
#          path: default
#
#      - name: Pull latest changes from Default project
#        run: |
#          cd default
#          git pull origin master
#
#      - name: Merge Default changes into app project
#        run: |
#          git merge default/master